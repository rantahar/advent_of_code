fish = scan("example_input", integer(), sep=",")
fish
table(fish)
table(fish)[4]
table(fish)[3]
table(fish)[3,2]
table(fish)[3,1]
table(fish)[3,0]
table(fish)[3]
table(fish)[1,3]
table(fish)[3]
table(fish)[3][]
table(fish)[3][1]
table(fish)[3][2]
table(fish)[3]
for(i in table(fish)){cat(i)}
for(i in table(fish)){cat(i,"\n")}
dictfor(i in table(fish)){cat(i,"\n")}
ditct()
dict()
count
table
table(fish)
vector(table(fish))
as.vector(table(fish))
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1.R')
fish_by_age[4]
fish_by_age[5]
fish_by_age[5] = 2
fish_by_age
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1.R')
fish_by_age[1]
fish_by_age[0]
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1.R')
fish_by_age
fish_by_age[6]
fish_by_age[6] = fish_by_age[6]
new_fish
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1.R')
tabe(fish)
table(fish)
source('~/src/aoc/6/part1.R')
table(fish)
# read the fish ages
fish = scan("example_input", integer(), sep=",")
DAYS = 18
fish_by_age = as.vector(table(fish))
# pad with zeros (note indexing from 1: position 9 is age 8)
for(t in (length(fish_by_age)+1):9){
fish_by_age[t] = 0
}
print(fish_by_age)
fish_by_age
new_fish = fish_by_age[1]
new_fish
for(i in 1:(length(fish_by_age)-1)){
fish_by_age[i] = fish_by_age[i+1]
}
fish_by_age
new_fish
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
fish_by_age
table(c(1,2,1,6,0,8))
table(c(3,4,3,1,2))
fish = scan("example_input", integer(), sep=",")
fish
for(t in 1:9){
fish_by_age[t] = sum(fish==(t-1))
}
print(fish_by_age)
# update age
fish = fish-1
new_fish = fish_by_age[1]
for(i in 1:(length(fish_by_age)-1)){
fish_by_age[i] = fish_by_age[i+1]
}
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
table(c(2,3,2,0,1))
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1.R')
source('~/src/aoc/6/part1_and_2.R')
fish
fish_by_age
fish_by_age[1:]
fish_by_age[1:8]
fish_by_age[2:8]
c(fish_by_age[2:8],0)
source('~/src/aoc/6/part1_and_2.R')
c(fish_by_age[2:8],0)
fish_by_age
c(fish_by_age[2:8],0)
c(fish_by_age[2:8],c(0)
c(fish_by_age[2:8],c(0))
c(fish_by_age[2:8],c(0,))
c(fish_by_age[2:8],c(,0))
c(fish_by_age[2:8],[c]
c(fish_by_age[2:8],[c])
c(0)
c(fish_by_age[2:8],c(0))
c(fish_by_age[2:8],0)
a = c(fish_by_age[2:8],0)
length(a)
length(fish)
length(fish_by_age)
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
fish_by_age[9]
new_fish
fish_by_age[7] + new_fish
fish_by_age[7] = fish_by_age[7] + new_fish
new_fish
fish_by_age
source('~/src/aoc/6/part1_and_2.R')
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)''
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
fish_by_age
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
fish_by_age[7]
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
# Remember the number of fish at 0. These move to 6 and create new fish at 8.
new_fish = fish_by_age[1]
# Update ages
fish_by_age = c(fish_by_age[2:8],0)
# Create new fish and move the ones from 0 to 6 (indexing from 1
fish_by_age[7] = fish_by_age[7] + new_fish
fish_by_age[9] = new_fish
print(fish_by_age)
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
library(gmp)
add(gmp)
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
packageDescription("gmp")
install.packages("gmp")
source('~/src/aoc/6/part1_and_2.R')
install.packages("gmp")
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
fish_by_age=1
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
fish_by_age=1
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
typeof(fish_by_age)
source('~/src/aoc/6/part1_and_2.R')
source('~/src/aoc/6/part1_and_2.R')
2^64
2^32
# read the fish ages
fish = scan("input", integer(), sep=",")
# count fish in each age group
for(t in 1:9){
fish_by_age[t] = sum(fish==(t-1))
}
# Use big integers to avoid overflow
fish_by_age = as.bigz(fish_by_age)
DAYS = 256
a = fish_by_age
a
DAYS=7
# Run for given number of days
for(d in 1:DAYS){
# Circular shift: update ages and add age 0 fish to age 8
fish_by_age = c(fish_by_age[2:9],fish_by_age[1])
# The fish at age 0 are also added to age 6
fish_by_age[7] = fish_by_age[7] + fish_by_age[9]
}
fish_by_age
# Run for given number of days
for(d in 1:DAYS){
# Circular shift: update ages and add age 0 fish to age 8
fish_by_age = c(fish_by_age[2:9],fish_by_age[1])
# The fish at age 0 are also added to age 6
fish_by_age[7] = fish_by_age[7] + fish_by_age[9]
}
fish_by_age
# read the fish ages
fish = scan("input", integer(), sep=",")
# count fish in each age group
for(t in 1:9){
fish_by_age[t] = sum(fish==(t-1))
}
# Use big integers to avoid overflow
fish_by_age = as.bigz(fish_by_age)
a = fish_by_age
a
# Run for given number of days
for(d in 1:DAYS){
# Circular shift: update ages and add age 0 fish to age 8
fish_by_age = c(fish_by_age[2:9],fish_by_age[1])
# The fish at age 0 are also added to age 6
fish_by_age[7] = fish_by_age[7] + fish_by_age[9]
}
fish_by_age
a
a + c(a[7:9],a[1:6])
a[7:9]
a + c(a[8:9],a[1:7])
fish_by_age
N=2
# read the fish ages
fish = scan("input", integer(), sep=",")
# count fish in each age group
for(t in 1:9){
fish_by_age[t] = sum(fish==(t-1))
}
# Use big integers to avoid overflow
fish_by_age = as.bigz(fish_by_age)
a = fish_by_age
# Run for given number of days
for(d in 1:DAYS){
# Circular shift: update ages and add age 0 fish to age 8
fish_by_age = c(fish_by_age[2:9],fish_by_age[1])
# The fish at age 0 are also added to age 6
fish_by_age[7] = fish_by_age[7] + fish_by_age[9]
}
DAYS
DAYS=3
# read the fish ages
fish = scan("input", integer(), sep=",")
# count fish in each age group
for(t in 1:9){
fish_by_age[t] = sum(fish==(t-1))
}
# Use big integers to avoid overflow
fish_by_age = as.bigz(fish_by_age)
a = fish_by_age
# Run for given number of days
for(d in 1:DAYS){
# Circular shift: update ages and add age 0 fish to age 8
fish_by_age = c(fish_by_age[2:9],fish_by_age[1])
# The fish at age 0 are also added to age 6
fish_by_age[7] = fish_by_age[7] + fish_by_age[9]
}
a
fish_by_age
c(a[N:9],a[1:N]) + c(a[N-2:9],a[1:N-2])
c(a[N:9],a[1:N]) + c(a[N-1:9],a[1:N-1])
c(a[N:9],a[1:N]) + c(a[N-3:9],a[1:N-3])
fish_by_age
c(a[N:9],a[1:N]) + c(a[N-2:9],a[1:N-2])
c(a[N:9],a[1:N-1]) + c(a[N-2:9],a[1:N-3])
c(a[N:9],a[1:N-1]) + c(a[N-1:9],a[1:N-2])
c(a[N:9],a[1:N-1]) + c(a[N-1:9],a[1:N-2])
N
c(a[N:9],a[1:N-1]) + c(a[N+1:9],a[1:N])
c(a[N:9],a[1:N-1]) + c(a[N+1:9],a[1:N])
a + c(a[8:9],a[1:7])
256/7
256%7
256//7
modulus(256,7)
modulus(256)
modulus(c(256,7)
modulus(c(256,7))
help(modulus)
256 %% 7
length(fish_by_age)
source('~/src/aoc/6/part1_and_2.R')
length(fish_by_age)
