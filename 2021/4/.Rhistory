l[[1]] ? 2
l[[1]] = 2
l = list(1,2,3,4)
l[[1]] = 2
l
source('~/src/aoc/4/part1.R')
source('~/src/aoc/4/part1.R')
source('~/src/aoc/4/part1.R')
source('~/src/aoc/4/part1.R')
list(1:100)
a = 1:100
a
matrix(0,1,4)
vector(0,4)
vector(4)
a = matrix(0,1,4)
a[1]
a[2]
a[3]
a[3]==1
source('~/src/aoc/4/part1.R')
source('~/src/aoc/4/part1_and_2.R')
table
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
tables == NA
tables_mar == NA
tables_mat == NA
tables_mat is NA
is.na(tables_mat)
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
array(0, dim=(3,3,3))
array(0, dim=c(3,3,3))
source('~/src/aoc/4/part1_and_2.R')
marks_mat
n = numbers[[0]]
n = numbers[[1]]
n
filter = ifelse( table_mat == strtoi(n[[1]]), TRUE, FALSE)
filter = ifelse( tables_mat == strtoi(n[[1]]), TRUE, FALSE)
filter
filter = ifelse( tables_mat == strtoi(n[[1]]), TRUE, FALSE)
marks_mat[filter] = 1
rowsums(marks_mat, dims=3)
rowSums(marks_mat, dims=3)
rowSums(marks_mat, dims=0)
rowSums(marks_mat, dims=1)
rowSums(marks_mat, dims=2)
marks_mat
rowSums(marks_mat, dims=3)
rowSums(marks_mat, dims=1)
rowSums(marks_mat, dims=2)
rowSums(marks_mat, dims=3)
sum(marks_mat)
sum(marks_mat, dim=1)
sum(marks_mat, dim=2)
sum(marks_mat, dim=3)
sum(marks_mat, dim=4)
sum(marks_mat, dim=5)
sum(marks_mat, dim=1)
apply(marks_mat, MARGIN=c(1, 2), sum)
apply(marks_mat, MARGIN=c(1, 3), sum)
apply(marks_mat, MARGIN=c(1, 3), sum) == 5
row_win = apply(marks_mat, MARGIN=c(1, 3), sum) == 5
col_win = apply(marks_mat, MARGIN=c(2, 3), sum) == 5
row_win && col_win
row_win
row_win + col_win
apply(row_win + col_win, MARGIN=c(2), sum)
win_count = apply(row_win + col_win, MARGIN=c(2), sum)
match(win_count>0)
win_count
win_count> 0
match(0, win_count)
match(1, win_count)
wich(0 in win_count)
wich(0 %in% win_count)
match(0, win_count)
win_count
which(win_count == 0)
winning_indexes = witch(win_count>0)
winning_indexes
witch(win_count>0)
winning_indexes = which(win_count>0)
winning_indexes
which(win_count>0)
win_count[4]
win_count[4] = 4
which(win_count>0)
win_count[8] = 4
which(win_count>0)
win_count = apply(row_win + col_win, MARGIN=c(2), sum)
winning_indexes = which(win_count>0)
length(winning_indexes)
score = strtoi(n)*apply(marks_mat, MARGIN=c(3), sum)
3), sum)
filter = ifelse( mark == 1, TRUE, FALSE)
scores = tables_mat
scores[filter]=0
scores = apply(scores, MARGIN=c(3), sum)*strtoi(n[[1]])
scores
scores[winning_indexes]
winning_indexes = which(win_count>0)
win_count[8] = 4
winning_indexes = which(win_count>0)
scores[winning_indexes]
swinning_tables = tables_mat[win_count>0]
scores = scores[win_count>0]
scores
winning_tables = tables_mat[win_count>0]
scores = tables_mat[win_count>0]
winning_tables
win_count
winning_tables = tables_mat[win_count>0, shape(5,5,length(winning_indexes))]
winning_tables = tables_mat[win_count>0, dim=(5,5,length(winning_indexes))]
winning_tables = tables_mat[win_count>0, dim=c(5,5,length(winning_indexes))]
array(tables_mat[win_count>0], dim=(5,5,length(winning_indexes)))
winning_tables = array(tables_mat[win_count>0], dim=(c5,5,length(winning_indexes)))
winning_tables = array(tables_mat[win_count>0], dim=c(5,5,length(winning_indexes)))
winning_tables
winning_tables = array(tables_mat[win_count>0], dim=c(5,5,NA)
)
winning_tables = array(tables_mat[win_count>0], dim=c(5,5,NA))
winning_tables = array(tables_mat[win_count>0], dim=c(5,5,-1))
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
tables
tables[5,5,1]
tables[5,5]
tables_mat[5,5]
tables_mat[5,,15]
tables_mat[5,5,1]
tables_mat[5,5,1:12]
c(1,2,3)
array(c(1,2,3),dim=c(3,2))
array(c(1,2,3),dim=c(3,4))
array(c(1,2,3),dim=c(3,3))
array(c(1,2,3),dim=c(2,3))
win_count
win_count > 0
source('~/src/aoc/4/part1_and_2.R', echo=TRUE)
source('~/src/aoc/4/part1_and_2.R', echo=TRUE)
win_count > 0
win_count[8] = 4
win_count > 0
!(win_count > 0)
tables_mat
tables_mat[win_count > 0]
tables_mat[win_count == 0]
array(tables_mat[win_count == 0], dim=c(5,5,3))
array(tables_mat[win_count == 0], dim=c(5,5,99))
length(win_count)
already_won = matrix(FALSE, 1, length(tables))
winners = win_count>0 && !already_won
winners
winners = win_count>0 & !already_won
winners
already_won
win_count
winners
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
win_count
winners
win_count[4]=4
winners = win_count>0 & !already_won
winning_indexes = which(winners)
winner_dim = c(5, 5, length(winning_indexes))
scores = array(tables_mat[win_count>0], dim=winner_dim)
winner_marks = array(marks_mat[win_count>0], dim=winner_dim)
scores[winner_marks == 1] = 0
scores = apply(scores, MARGIN=c(3), sum)*strtoi(n[[1]])
scores
print(winning_indexes)
print(scores)
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
winners
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
numbers
tables
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
tables_mat
marks
tables_mat*(marks==0)
tables_mat*(marks_mat==0)
tables_mat*(marks_mat==0)
tables_mat
marks_mat
marks_mat==0
tables_mat * (marks_mat==0)
tables_mat * (marks_mat==1)
marks_mat
marks_mat==1
source('~/src/aoc/4/part1_and_2.R')
scores
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
warnings()
tables_mat
array()
length(array())
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
length(array())
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
tables_mat
tables_mat[100]
tables_mat[:,:100]
tables_mat[:,:,100]
tables_mat[,,100]
debugSource('~/src/aoc/4/part1_and_2.R')
tables
table
tables_mat
first
tables_mat
debugSource('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
tables_mat
tables_mat[100]
tables_mat[1:5,1:5,100]
scores
source('~/src/aoc/4/part1_and_2.R')
length(winning_indexes)
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
read_delim(connection)
read.delim(connection)
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
# There is an empty line here
readLines(connection, n = 1)
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection)
tables
length(tables)
tables
tables[[]]
tables[[1]]
length(tables[[1]])
numbers
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection)
tables
tables[[1]][1]
tables[[1]][0]
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE)
tables[[1]][0]
tables[[1]][1]
ls
n_tables = length(tables[[1]])/25
n_tables
length(tables[[1]])
length(tables)
length(c(tables))
c(tabels)
c(tables)
c(tables)[[1]]
length(c(tables)[[1]])
as.vector(tables)
length(as.vector(tables))
dim(tables)
tables
tables["V1"]
dim(tables["V1"])
tables["V1"]
tables["V1"][500]
tables["V1"][100]
tables["V1"][100,]
tables["V1"][1,]
tables["V1"][1,1]
tables["V1"][1]
tables["V1"][,1]
tables["V1"][1,1]
tables["V1"][1,1,1]
tables["V1"][1,1,1,1]
tables["V1"][[1]]
tables[[1]]
array(tables_mat)
array(tables)
array(tables)[1]
array(tables)[1,1]
array(tables)[1,1,1]
array(tables)[1,1]
array(tables)[1,1]
c = array(tables)[1,1]
c
type(c)
typeof(c)
tables.matrix()
data.matrix(tables)
data.matrix(tables)[1]
data.matrix(tables)[1,1]
data.matrix(tables)
tables[2,]
tables[1,]
source('~/src/aoc/4/part1_and_2.R')
tables
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE)
n_tables = as.numeric(readLines(connection))
tables
n_tables
tables
data.matrix(tables, rownames.force = NA)
data.matrix(tables)
tables
tables[50]
tables[,50]
tables[3,5]
tables[3,3]
tables[6,3]
tables[6,]
tables[6,]
tables[6,2]
tables[6,1]
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE, stringsAsFactors = FALSE)
n_tables = length(tables[[1]])/25
tables
tables[1,]
tables[1,2]
tables[1]
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE, sep="")
n_tables = length(tables[[1]])/25
tables
tables[1,]
tables[1,2]
dim(tables)
length(tabels)
length(tables)
data.matrix(tables)
dim(data.matrix(tables)))
dim(data.matrix(tables))
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE, sep="")
tables = data.matrix(tables)
n_tables = dim(tables)[1]/5
n_Tables
tables
n_tables
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE, sep="")
tables = data.matrix(tables)
n_tables = dim(tables)[1]/5
tables = array(tables, dim=c(5,5,n_tables))
tables
n_tables
tables
tables[100]
tables[,,100]
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE, sep="")
tables = data.matrix(tables)
tables
tables[100,]
tables[500,]
array(tables, dim=c(100,5,5))
array(tables, dim=c(5,100,5))
array(tables, dim=c(5,5,100))
array(tables, dim=c(5,5,100))[,,100]
array(tables, dim=c(5,5,100))[,,500]
array(tables, dim=c(5,5,100))[,,100]
array(tables, dim=c(5,100,5))[,100]
array(tables, dim=c(5,100,5))[,100,]
aperm(tables, c(1,3,2))
# open the file
connection = file("input", open="r")
# read first line
numbers = readLines(connection, n = 1)
numbers = strsplit(numbers, split = ",")[[1]]
tables = c()
first = TRUE
tables_mat=NA
tables = read.delim(connection, header=FALSE, sep="")
tables = data.matrix(tables)
n_tables = dim(tables)[1]/5
tables = array(tables, dim=c(5,n_tables,5))
tables = aperm(tables, c(1,3,2))
tables
tables[,,100]
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
source('~/src/aoc/4/part1_and_2.R')
