source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
chars
source('~/src/aoc/20/part1.R')
enhancement
source('~/src/aoc/20/part1.R')
map
padzeros
length(map)
source('~/src/aoc/20/part1.R')
map
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
nrow
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
nrow
dim
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
dims = dim(map)
dims
rep(0, dims[1]*dims[2])
rep(0, (dims[1]+2)*(dims[2]+2))
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
padded
dims = dim(map)
rows = dims[1]+2
cols = dims[2]+2
padded = matrix(rep(0, rows*cols), ncol=cols)
padded[2:(dims[1]+1), 2:(dims[2]+1)] = map
padded
padded[1:dims[1], 1:dims[2]]
padded[1:dims[1], 2:(dims[2]+1)]
padded[1:dims[1], 3:(dims[2]+2)]
padded[2:(dims[1]+1), 1:dims[2]]
padded[2:(dims[1]+1), 2:(dims[2]+1)]
padded[2:(dims[1]+1), 3:(dims[2]+2)]
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
dims = dim(map)
rows = dims[1]+4
cols = dims[2]+4
padded = matrix(rep(0, rows*cols), ncol=cols)
padded[3:(dims[1]+2), 3:(dims[2]+2)] = map
padded
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
map
padded
binary[0]
binary[1]
binary = list(
padded[1:(rows-2), 1:(cols-2)],
padded[1:(rows-2), 2:(cols-1)],
padded[1:(rows-2), 3:cols],
padded[2:(rows-1), 1:(cols-2)],
padded[2:(rows-1), 2:(cols-1)],
padded[2:(rows-1), 3:cols],
padded[3:rows, 1:(cols-2)],
padded[3:rows, 2:(cols-1)],
padded[3:rows, 3:cols]
)
binary[[0]]
binary[[1]]
binary[[2]]
map
padded
binary[[1]]
binary[[2]]
binary[[3]]
binary[[4]]
nums = matrix(rep(0, (rows-2)*(cols-2)), ncol=(cols-2))
d = 1
for(b in binary){
nums = nums + d*b
}
numbs
nums
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
nums
new
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
map
source('~/src/aoc/20/part1.R')
nums
length(nums)
enhancement[nums]
length(enhancement[nums])
nums
nums = matrix(rep(0, (rows-2)*(cols-2)), ncol=(cols-2))
d = 1
for(b in binary){
nums = nums + d*b
d = 2*d
}
nums
length(enhancement[nums])
enhancement[nums]
nums
length(nums)
length(enhancement)
nums
c(nums)
length(c(nums))
length(enhancement(c(nums))
length(enhancement(c(nums)))
enhancement(c(nums))
enhancement[c(nums)]
length(enhancement[c(nums)])
enhancement[448]
enhancement[256]
enhancement[0]
source('~/src/aoc/20/part1.R')
nums = matrix(rep(1, (rows-2)*(cols-2)), ncol=(cols-2))
d = 1
for(b in binary){
nums = nums + d*b
d = 2*d
}
new_map = matrix(enhancement[nums], ncol=cols-2)
new_map
source('~/src/aoc/20/part1.R')
map
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
map[3,3]
map[2,3]
map[3,3]
map[3,2]
map[2,2]
map[2,3]
map[2,2]
map[3,2]
map[2:4,2:4]
map[4,4]
map
# read the input lines
data = readLines("example_input")
enhancement = c()
map = c()
# Read the enhancement line first
reading_enhancement = TRUE
for(line in data){
if(line==""){
reading_enhancement = FALSE
} else{
chars = strsplit(line, "")[[1]]
segment = ifelse(chars == "#", 1, 0)
if(reading_enhancement){
enhancement = c(enhancement, segment)
} else {
map = c(map, segment)
map = matrix(map, ncol=length(segment))
}
}
}
map = t(map)
enhance = function(map, enhancement){
# pad the map with 0s
dims = dim(map)
rows = dims[1]+4
cols = dims[2]+4
padded = matrix(rep(0, rows*cols), ncol=cols)
padded[3:(dims[1]+2), 3:(dims[2]+2)] = map
binary = list(
padded[1:(rows-2), 1:(cols-2)],
padded[1:(rows-2), 2:(cols-1)],
padded[1:(rows-2), 3:cols],
padded[2:(rows-1), 1:(cols-2)],
padded[2:(rows-1), 2:(cols-1)],
padded[2:(rows-1), 3:cols],
padded[3:rows, 1:(cols-2)],
padded[3:rows, 2:(cols-1)],
padded[3:rows, 3:cols]
)
nums = matrix(rep(1, (rows-2)*(cols-2)), ncol=(cols-2))
d = 1
for(b in binary){
nums = nums + d*b
d = 2*d
}
new_map = matrix(enhancement[nums], ncol=cols-2)
return(new_map)
}
print(map)
map
map[4,4]
map[3,4]
map[3,3]
map[4,3]
dims = dim(map)
rows = dims[1]+4
cols = dims[2]+4
padded = matrix(rep(0, rows*cols), ncol=cols)
padded[3:(dims[1]+2), 3:(dims[2]+2)] = map
padded[6,6]
padded[6,5]
padded[5,6]
padded[5,5]
padded[5,6]
padded[5,7]
padded[5,5:7]
padded[5:7,5:7]
padded[6:8,6:8]
padded
padded[4:6]
padded[4:6,4:6]
padded[4,4]
padded[4,5]
padded[4,6]
binary = list(
padded[1:(rows-2), 1:(cols-2)],
padded[1:(rows-2), 2:(cols-1)],
padded[1:(rows-2), 3:cols],
padded[2:(rows-1), 1:(cols-2)],
padded[2:(rows-1), 2:(cols-1)],
padded[2:(rows-1), 3:cols],
padded[3:rows, 1:(cols-2)],
padded[3:rows, 2:(cols-1)],
padded[3:rows, 3:cols]
)
binary[[0]]
binary[[1]]
map
binary[[9]]
nums = matrix(rep(1, (rows-2)*(cols-2)), ncol=(cols-2))
d = 1
for(b in binary){
nums = nums + d*b
d = 2*d
}
nums
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
enhancement
# read the input lines
data = readLines("input")
enhancement = c()
map = c()
# Read the enhancement line first
reading_enhancement = TRUE
for(line in data){
if(line==""){
reading_enhancement = FALSE
} else{
chars = strsplit(line, "")[[1]]
segment = ifelse(chars == "#", 1, 0)
if(reading_enhancement){
enhancement = c(enhancement, segment)
} else {
map = c(map, segment)
map = matrix(map, ncol=length(segment))
}
}
}
map = t(map)
# pad the map with 0s
dims = dim(map)
rows = dims[1]+4
cols = dims[2]+4
padded = matrix(rep(0, rows*cols), ncol=cols)
padded[3:(dims[1]+2), 3:(dims[2]+2)] = map
binary = list(
padded[1:(rows-2), 1:(cols-2)],
padded[1:(rows-2), 2:(cols-1)],
padded[1:(rows-2), 3:cols],
padded[2:(rows-1), 1:(cols-2)],
padded[2:(rows-1), 2:(cols-1)],
padded[2:(rows-1), 3:cols],
padded[3:rows, 1:(cols-2)],
padded[3:rows, 2:(cols-1)],
padded[3:rows, 3:cols]
)
nums = matrix(rep(1, (rows-2)*(cols-2)), ncol=(cols-2))
d = 256
for(b in binary){
nums = nums + d*b
d = d/2
}
dim(map)
dim(padded)
dim(nums)
nums
nums > 511
sum(nums > 511)
sum(nums > 512)
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
104*104
104*104-5402
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
enhancement
length(enhancement)
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
source('~/src/aoc/20/part1.R')
