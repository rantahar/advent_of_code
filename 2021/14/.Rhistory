source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
rules
rules[[1]]
pairs[1]
rules[1]
rules
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
biginteger_as(1)
as_bigz(c())
as.bigz(c())
a = as.bigz(c())
a[1] = 2
a
a[2] = 19999999999
a
source('~/src/aoc/14/part2.R')
counts
source('~/src/aoc/14/part2.R')
pairs
counts = c()
chars
names(chars)
source('~/src/aoc/14/part2.R')
print(counts)
counts = 0*(1:length(chars))
print(counts)
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
count
count/4
as.bigz(count/4)
145/4
145/2
nt64
int64
Int64
is.integer64
library(bit64, lib.loc = "/usr/lib/R/site-library")
library(bit64, lib.loc = "/usr/lib/R/site-library")
library(bit64)
integer(64)
integer64(64)
integer64(1)
a = integer64()
a
a["hi"] = 6
a
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
library(bit64)
# Read the data
data = readLines("example_input")
# The polymer template is on the first line
polymer = data[1]
cat("template", polymer, "\n")
# make a list of pairs and number them. Each produce 2 new pairs each round
pairs = integer64()
for(c in 1:(nchar(polymer)-1)){
pair = substr(polymer, c, c+1)
pairs[pair] = 1
}
# Save the rules in a list and index by the pair
rules = list()
# also list characters as we go
chars = strsplit(polymer, "")[[1]]
print(chars)
for( line in data[3:length(data)]){
pair = substr(line, 1,2)
if(!(pair %in% names(pairs))){
pairs[pair] = 0
}
# Construct the two new pairs and add to rules
first = substr(pair, 1, 1)
second = substr(pair, 2, 2)
insertion = substr(line, 7,7)
new_pair1 = paste(first, insertion, sep="")
new_pair2 = paste(insertion, second, sep="")
rules[[pair]] = list(new_pair1, new_pair2)
if(!(insertion %in% chars)){
chars[length(chars)+1] = insertion
}
}
print(pairs)
pairs
0*pairs
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
counts
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
counts
counts[1]
counts[length(counts)]
counts[4]
counts[3]
counts[2]
counts[3]
counts[length(counts)]
length(counts)
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
if(!(insertion %in% chars)){
chars[length(chars)+1] = insertion
}
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
sum(counts)
sum(pairs)
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
sum(pairs)
sum(counts)
5240/
5240/2
5240/2
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
counts[N]
counts["N"]
source('~/src/aoc/14/part2.R')
rules
rules[[CH]]
rules[["CH"]]
rules[["HH"]]
rules[["CB"]]
rules[["NH"]]
rules[["HB"]]
rules[["HC"]]
rules[["HN"]]
rules[["NN"]]
rules[["BH"]]
rules[["NC"]]
rules[["BN"]]
rules[["BB"]]
rules[["BC"]]
rules[["CC"]]
rules[["CN"]]
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
rules[["CN"]]
rules[["CN"]][[1]]
rules[["CN"]][[2]]
rules[pairs]
riles
rules
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
pairs
names(pairs)
source('~/src/aoc/14/part2.R')
1749*2
2497/2
3497/2
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
counts
counts/2
ceiling(counts/2)
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
score
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
pairs
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
pairs["KC"]
pairs["CK"]
pairs["CO"]
pairs["ON"]
pairs["NS"]
pairs["SV"]
pairs["VP"]
pairs["PN"]
2399822193707
source('~/src/aoc/14/part2.R')
pairs["KK"]
pairs["KC"]
pairs["CC"]
pairs["CS"]
pairs["SK"]
pairs["CN"]
pairs["NO"]
pairs["OS"]
pairs["SN"]
pairs["NS"]
pairs["SC"]
source('~/src/aoc/14/part2.R')
pairs["SC"]
pairs["KC"]
source('~/src/aoc/14/part2.R')
pairs["KC"]
source('~/src/aoc/14/part2.R')
pairs["KC"]
source('~/src/aoc/14/part2.R')
pairs["KC"]
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
pairs["KC"]
source('~/src/aoc/14/part2.R')
pairs["KC"]
source('~/src/aoc/14/part2.R')
pairs["KC"]
source('~/src/aoc/14/part2.R')
pairs["KC"]
rules["KC"]
rules["KK"]
rules["KO"]
rules["SK"]
source('~/src/aoc/14/part2.R')
rules["KC"]
parts["KC"]
pairs["KC"]
source('~/src/aoc/14/part2.R')
parts["KC"]
pairs["KC"]
source('~/src/aoc/14/part2.R')
pairs["KC"]
pairs["PV"]
pairs["KK"]
source('~/src/aoc/14/part2.R')
rules
rules
for(rule in rules)
for(rule in rules){if(rule[[1]]=="KC"){print(rule)}}
for(rule in rules){if(rule[[2]]=="KC"){print(rule)}}
for(rule in rules){if(rule[[1]]=="KC"){print(rule)}}
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
for(rule in rules){if(rule[[1]]=="KC"){print(rule)}}
for(rule in rules){if(rule[[2]]=="KC"){print(rule)}}
source('~/src/aoc/14/part2.R')
for(rule in rules){if(rule[[2]]=="KK"){print(rule)}}
for(rule in rules){if(rule[[1]]=="KK"){print(rule)}}
source('~/src/aoc/14/part2.R')
for(rule in rules){if(rule[[1]]=="OK"){print(rule)}}
for(rule in rules){if(rule[[2]]=="OK"){print(rule)}}
source('~/src/aoc/14/part2.R')
for(rule in rules){if(rule[[2]]=="OK"){print(rule)}}
source('~/src/aoc/14/part2.R')
for(rule in rules){if(rule[[2]]=="OK"){print(rule)}}
for(rule in rules){if(rule[[1]]=="OK"){print(rule)}}
source('~/src/aoc/14/part2.R')
for(rule in rules){if(rule[[2]]=="HK"){print(rule)}}
for(rule in rules){if(rule[[1]]=="HK"){print(rule)}}
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
source('~/src/aoc/14/part2.R')
